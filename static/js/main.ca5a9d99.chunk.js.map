{"version":3,"sources":["styles.js","App.js","helpers.js","serviceWorkerRegistration.js","index.js"],"names":["styles","height","margin","fontFamily","fontSize","boxSizing","container","display","alignItems","flexDirection","paddingTop","topContainer","maxWidth","width","marginBottom","marginLeft","section","overflow","padding","fontWeight","bottomSection","INITIAL_STATE","withStyles","classes","useState","switches","setSwitches","foundNumbers","setFoundNumbers","duplicateNumbers","setDuplicateNumbers","handleChange","i","state","before","get","after","set","decimalState","parseInt","join","includes","concat","missingNumbers","useMemo","maxNum","max","projectedRange","Array","fill","map","_","difference","findMissingNumbers","Container","className","Paper","ref","scrollTo","scrollHeight","num","Typography","component","color","Box","clone","p","on","Switch","checked","onChange","mt","cn","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ca5a9d99.chunk.js","sourcesContent":["const styles = {\r\n  '@global': {\r\n    [['html', 'body', '#root']]: {\r\n      height: '100%',\r\n      margin: 0,\r\n      fontFamily: 'sans-serif',\r\n      fontSize: '18px',\r\n      boxSizing: 'border-box',\r\n    },\r\n    [['*', '*::before', '*::after']]: {\r\n      boxSizing: 'inherit',\r\n    },\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n    paddingTop: '32px',\r\n  },\r\n  topContainer: {\r\n    display: 'flex',\r\n    maxWidth: '496px',\r\n    width: '100%',\r\n    marginBottom: '32px',\r\n    '& > $section': {\r\n      height: '200px',\r\n      width: 'calc(50% - 16px)',\r\n      '&:not(:first-child)': {\r\n        marginLeft: '32px',\r\n      },\r\n    },\r\n  },\r\n  section: {\r\n    overflow: 'hidden',\r\n    padding: '16px',\r\n    '&:hover': {\r\n      overflow: 'overlay',\r\n    },\r\n    '& > div': {\r\n      display: 'inline-block',\r\n      padding: '4px',\r\n      fontWeight: '600 !important',\r\n    },\r\n  },\r\n  bottomSection: {\r\n    maxWidth: '496px',\r\n    width: '100%',\r\n    height: '100px',\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","import { useState, useMemo } from 'react';\nimport { set, get, concat } from 'lodash/fp';\nimport cn from 'clsx';\n\nimport {\n  Switch,\n  withStyles,\n  Paper,\n  Box,\n  Container,\n  Typography,\n} from '@material-ui/core';\n\nimport { parseState, findMissingNumbers, scrollBottom } from './helpers';\nimport styles from './styles';\n\nconst INITIAL_STATE = [0, 0, 0, 0, 0, 0, 0, 0];\n\nconst App = ({ classes }) => {\n  const [switches, setSwitches] = useState(INITIAL_STATE);\n  const [foundNumbers, setFoundNumbers] = useState([0]);\n  const [duplicateNumbers, setDuplicateNumbers] = useState([]);\n\n  const handleChange = (i) => () => {\n    const before = get(i, switches);\n    const after = set(i, before ^ 1, switches);\n\n    const decimalState = parseState(after);\n    if (foundNumbers.includes(decimalState)) {\n      setDuplicateNumbers(concat(duplicateNumbers, decimalState));\n    } else {\n      setFoundNumbers(concat(foundNumbers, decimalState));\n    }\n\n    setSwitches(after);\n  };\n\n  const missingNumbers = useMemo(() => {\n    return findMissingNumbers(foundNumbers);\n  }, [foundNumbers]);\n\n  return (\n    <Container maxWidth={'md'} className={classes.container}>\n      <div className={classes.topContainer}>\n        <Paper className={classes.section} ref={scrollBottom()}>\n          {foundNumbers.map((num, i) => (\n            <Typography key={i} component={'div'}>\n              {num}\n            </Typography>\n          ))}\n        </Paper>\n\n        <Paper className={classes.section} ref={scrollBottom()}>\n          {missingNumbers.map((num, i) => (\n            <Typography key={i} component={'div'} color={'error'}>\n              {num}\n            </Typography>\n          ))}\n        </Paper>\n      </div>\n\n      <Box clone p={2}>\n        <Paper>\n          {switches.map((on, i) => (\n            <Switch key={i} checked={!!on} onChange={handleChange(i)} />\n          ))}\n        </Paper>\n      </Box>\n\n      <Box clone mt={4} p={2}>\n        <Paper className={cn(classes.section, classes.bottomSection)}>\n          {duplicateNumbers.map((num, i) => (\n            <Typography key={i} component={'div'} color={'error'}>\n              {num}\n            </Typography>\n          ))}\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default withStyles(styles)(App);\n","import { parseInt, max, difference, __ } from 'lodash/fp';\r\n\r\nconst parseState = (state) => parseInt(2, state.join(''));\r\n\r\nconst findMissingNumbers = (foundNumbers) => {\r\n  const maxNum = max(foundNumbers);\r\n  const projectedRange = Array(maxNum)\r\n    .fill()\r\n    .map((_, i) => i);\r\n\r\n  return difference(projectedRange, foundNumbers);\r\n};\r\n\r\nconst scrollBottom = () => (ref) => {\r\n  if (ref) {\r\n    ref.scrollTo(0, ref.scrollHeight);\r\n  }\r\n};\r\n\r\nexport { parseState, findMissingNumbers, scrollBottom };\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}